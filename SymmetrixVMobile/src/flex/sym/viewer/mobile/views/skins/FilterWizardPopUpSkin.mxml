<?xml version="1.0" encoding="utf-8"?>

<!--

    ADOBE SYSTEMS INCORPORATED
    Copyright 2008 Adobe Systems Incorporated
    All Rights Reserved.

    NOTICE: Adobe permits you to use, modify, and distribute this file
    in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for a Spark SkinnablePopUpContainer container.

    @see spark.components.SkinnablePopUpContainer

    @langversion 3.0
    @playerversion Flash 10
    @playerversion AIR 2.5
    @productversion Flex 4.5
-->
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:s="library://ns.adobe.com/flex/spark"
        xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
        alpha.disabled="0.5"
        creationComplete="skin1_creationCompleteHandler(event)" xmlns:breadcrumb="sym.viewer.mobile.views.components.breadcrumb.*">

    <fx:Metadata>
        <![CDATA[ 
        /** 
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("spark.components.SkinnablePopUpContainer")]
    ]]>
    </fx:Metadata>

    <fx:Declarations>

        <s:DropShadowFilter id="shadow"
                            alpha="0.3"
                            distance="5"
                            angle="90"/>
    </fx:Declarations>

    <fx:Script fb:purpose="styling">
        <![CDATA[
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			
			import spark.effects.easing.Power;
			
			import sym.controller.SymmController;
			import sym.objectmodel.common.Constants;
			import sym.viewer.mobile.script.ViewConstants;
			import sym.viewer.mobile.views.components.wizard.FilterWizardPopUp;

            public static const CORNER_RADIUS:Number = 8;


            [Embed(source = "/images/vmax10ke_new.png")]
            public static var Vmax10ke:Class;

            [Embed(source = "/images/vmax20k_new.png")]
            public static var Vmax20k:Class;

            [Embed(source = "/images/vmax40k_new.png")]
            public static var Vmax40k:Class;

			[Embed(source = "/images/vmax_100k.png")]
            public static var Vmax100k:Class;

			[Embed(source = "/images/vmax_200k.png")]
            public static var Vmax200k:Class;
			
			[Embed(source = "/images/vmax_400k.png")]
            public static var Vmax400k:Class;
			
			[Embed(source = "/images/vmax_450f.png")]
			public static var Vmax450f:Class;
			
			[Embed(source = "/images/vmax_850f.png")]
			public static var Vmax850f:Class;

			[Embed(source = "/images/vmax_250f.png")]
			public static var Vmax250f:Class;
			
			[Embed(source = "/images/dell-emc-powermax-series_wizard.jpg")]
			public static var PowerMax2000:Class;
			
			[Embed(source = "/images/dell-emc-powermax-series_wizard.jpg")]
			public static var PowerMax8000:Class;

            [Embed(source = "/images/imported_configs.png")]
            public static var ImportedConfigurations:Class;  

            /**
             *  @private
             */
            override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
            {
                // Push backgroundColor and backgroundAlpha directly.
                // Handle undefined backgroundColor by hiding the background object.
                if (isNaN(getStyle("backgroundColor")))
                {
                    background.visible = false;
                }
                else
                {
                    background.visible = true;
                    bgFill.color = getStyle("backgroundColor");
                    bgFill.alpha = getStyle("backgroundAlpha");
                }

                super.updateDisplayList(unscaledWidth, unscaledHeight);
            }


            protected function skin1_creationCompleteHandler(event:FlexEvent):void
            {
                var bitmap:Bitmap = null;
                
                switch (SymmController.instance.vmaxConfiguration)
                {
					case Constants.VMAX_450F:
						bitmap = new Vmax450f();
						lblSeries.text = getResString("main", "VMAX_450F");
						break;
					case Constants.VMAX_950F:
						bitmap = new Vmax850f();
						lblSeries.text = getResString("main", "VMAX_950F");
						break;
					case Constants.VMAX_250F:
						bitmap = new Vmax250f();
						lblSeries.text = getResString("main", "VMAX_250F");
						break;
					case Constants.PowerMax_2000:
						bitmap = new PowerMax2000();
						lblSeries.text = getResString("main", "POWERMAX_2000");
						break;
					case Constants.PowerMax_8000:
						bitmap = new PowerMax8000();
						lblSeries.text = getResString("main", "POWERMAX_8000");
						break;
						
                } 
                vmaxSeria.source = bitmap;
            }
        ]]>
    </fx:Script>

    <s:states>
        <s:State name="normal"/>
        <s:State name="disabled"/>
        <s:State name="closed"
                 stateGroups="closedGroup"/>
        <s:State name="disabledAndClosed"
                 stateGroups="closedGroup"/>
    </s:states>

    <!-- Transitions for open and close -->
    <s:transitions>
        <s:Transition fromState="closed"
                      toState="normal"
                      autoReverse="true">
            <s:Fade duration="150"
                    target="{chrome}"/>
        </s:Transition>

        <s:Transition fromState="disabledAndClosed"
                      toState="disabled"
                      autoReverse="true">
            <s:Fade duration="150"
                    target="{chrome}"/>
        </s:Transition>

        <s:Transition fromState="normal"
                      toState="closed"
                      autoReverse="true">
            <s:Fade duration="150"
                    target="{chrome}"/>
        </s:Transition>

        <s:Transition fromState="disabled"
                      toState="disabledAndClosed"
                      autoReverse="true">
            <s:Fade duration="150"
                    target="{chrome}"/>
        </s:Transition>
    </s:transitions>

    <s:Group id="chrome"
             left="0"
             right="0"
             top="0"
             bottom="0"
             visible.closedGroup="false"
			 minHeight="350"
			 minWidth="700">

        <!--- Defines the appearance of the SkinnablePopUpContainer class's background. -->
        <s:Rect id="background"
                left="0"
                right="0"
                top="0"
                bottom="0"
                radiusX="{CORNER_RADIUS}"
                radiusY="{CORNER_RADIUS}">
            <s:fill>
                <!--- @private -->
                <s:SolidColor id="bgFill"
                              color="#007DB8"/>
            </s:fill>
            <s:stroke>
                <s:SolidColorStroke color="#007DB8"
                                    weight="2"/>
            </s:stroke>
        </s:Rect>

        <!--
        Note: Setting the minimum size to 0 here so that changes to the host component's
        size will not be thwarted by this skin part's minimum size.   This is a compromise,
        more about it here: http://bugs.adobe.com/jira/browse/SDK-21143
        -->
        <!--- @copy spark.components.SkinnableContainer#contentGroup -->
        <s:Group id="contentGroup"
                 left="0"
                 right="0"
                 top="{this.height * 0.1 - CORNER_RADIUS}"
                 bottom="0">
            <s:layout>
                <s:VerticalLayout horizontalAlign="center"
                                  verticalAlign="middle"
                                  paddingBottom="3"
                                  paddingLeft="3"
                                  paddingTop="3"
                                  paddingRight="3"
                                  gap="-5"/>
            </s:layout>
        </s:Group>
    </s:Group>

    <s:BorderContainer width="100%"
                       height="10%"
					   minWidth="700"
                       borderVisible="false"
                       filters="{[shadow]}"
                       backgroundAlpha="0">

        <s:Rect left="0"
                right="0"
                height="100%"
                topLeftRadiusX="{CORNER_RADIUS}"
                topRightRadiusX="{CORNER_RADIUS}"
                filters="{[shadow]}"
                id="titleBar">
            <s:fill>
                <s:LinearGradient rotation="90">
                    <s:GradientEntry color="#2483c2"/>
                    <s:GradientEntry color="#2896de"/>
                </s:LinearGradient>
            </s:fill>
        </s:Rect>


        <s:HGroup id="headerGroup"  
				  width="100%"
                  height="100%"
                  verticalAlign="middle"
                  horizontalAlign="center">
            <s:HGroup height="100%"
					  width="100%"
                      paddingBottom="3"
                      paddingTop="3"
                      paddingLeft="3"
                      paddingRight="3"
                      verticalAlign="middle">
				<s:Image id="vmaxSeria"
						 height="100%"
						 smooth="true"
						 scaleMode="letterbox"/>
                <s:Label id="lblSeries"
                         styleName="popupTitle"
                         textAlign="left"
                         fontSize="{17 * FlexGlobals.topLevelApplication.height/ViewConstants.DEFAULT_APP_HEIGHT}"/>
            </s:HGroup>
			
			<s:HGroup height="100%"
					  paddingBottom="5" 
					  paddingTop="5"
					  paddingRight="20"
					  horizontalAlign="right"
					  verticalAlign="middle"
					  gap="5">
				<s:Group height="100%" 
						 top="5" bottom="5"
						 horizontalCenter="0" verticalCenter="0">
					
					<breadcrumb:BreadCrumbArrowedShape id="titleContent" 
													   width="100%"
													   height="100%"
													   arrowSharpness="4"
													   isStartingLink="false"
													   colorIndex="3" 
													   colors="{[0x77CBF8, 0x49A1E0]}"
													   useHandCursor="false"
													   buttonMode="false"
													   /> 
			        <s:Label id="lblTitle" 
							 paddingLeft="15" paddingRight="5"
			                 styleName="popupTitle"
			                 verticalCenter="0" horizontalCenter="0"
			                 fontSize="{17 * FlexGlobals.topLevelApplication.height/ViewConstants.DEFAULT_APP_HEIGHT}"
			                 text="{FilterWizardPopUp.title}"/>
				</s:Group>
				<s:Group height="100%"
						 horizontalCenter="0" verticalCenter="0">
					
					<breadcrumb:BreadCrumbArrowedShape id="stepContent"
													   width="100%"
													   height="100%"
													   arrowSharpness="4"
													   isStartingLink="false"
													   colorIndex="3" 
													   colors="{[0xFFFFFF, 0xD6D6D6]}"
													   useHandCursor="false"
													   buttonMode="false"
													   /> 
					<s:Label id="lblStep"
							 paddingLeft="15" paddingRight="5"
							 styleName="popupTitleStep" 
							 verticalCenter="0"
							 horizontalCenter="0"
							 fontSize="{17 * FlexGlobals.topLevelApplication.height/ViewConstants.DEFAULT_APP_HEIGHT}"
							 text="{FilterWizardPopUp._titleCurrentStep}"/>
				</s:Group>
			</s:HGroup>
        </s:HGroup>
    </s:BorderContainer>
</s:Skin>
